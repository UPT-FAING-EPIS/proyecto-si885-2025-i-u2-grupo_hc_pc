name: Azure GitHub Analytics ETL Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * 1' # Se ejecuta cada Lunes a las 3 AM UTC

jobs:
  terraform-deploy:
    name: 'Terraform Deploy Infrastructure'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./infra

    outputs:
      db_server: ${{ steps.get_outputs.outputs.db_server }}
      db_database: ${{ steps.get_outputs.outputs.db_database }}
      db_username: ${{ steps.get_outputs.outputs.db_username }}
      db_password: ${{ steps.get_outputs.outputs.db_password }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 'Login to Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan

    - name: Get Terraform Outputs
      id: get_outputs
      run: |
        terraform output -json > tf_outputs.json
        echo "db_server=$(jq -r '.sql_server_fqdn.value' tf_outputs.json)" >> $GITHUB_OUTPUT
        echo "db_database=$(jq -r '.sql_database_name.value' tf_outputs.json)" >> $GITHUB_OUTPUT
        echo "db_username=$(jq -r '.sql_admin_login.value' tf_outputs.json)" >> $GITHUB_OUTPUT
        echo "db_password=$(jq -r '.sql_admin_password.value' tf_outputs.json)" >> $GITHUB_OUTPUT

  run-etl:
    name: 'Run Python ETL Script'
    runs-on: ubuntu-latest
    needs: terraform-deploy
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install ODBC Driver for SQL Server
      run: |
        sudo apt-get update
        sudo apt-get install -y unixodbc-dev
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run ETL script
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        DB_SERVER: ${{ needs.terraform-deploy.outputs.db_server }}
        DB_DATABASE: ${{ needs.terraform-deploy.outputs.db_database }}
        DB_USERNAME: ${{ needs.terraform-deploy.outputs.db_username }}
        DB_PASSWORD: ${{ needs.terraform-deploy.outputs.db_password }}
      run: python ./scrap_pequeno.py
